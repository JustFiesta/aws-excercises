AWSTemplateFormatVersion: '2010-09-09'
Description: 'Assesment template for ALB setup'

Parameters:
  EnvironmentName:
    Type: String
    Default: 'dev'
  VpcId:
    Type: String
  LambdaSecurityGroupId:
    Type: String
    Description: 'Security Group ID for Lambda function'
  LambdaFunctionArn:
    Type: String
    Description: 'Arn of the Lambda Function'
  PrivateSubnetId1:
    Type: String
  PrivateSubnetId2:
    Type: String
  ALBTargetGroupName:
    Type: String

Resources:
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Security group for ALB'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          DestinationSecurityGroupId: !Ref LambdaSecurityGroupId
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-alb-sg

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Subnets:
        - !Ref PrivateSubnetId1
        - !Ref PrivateSubnetId2
      Type: application
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-alb

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: LambdaALBPermission
    Properties:
      TargetType: lambda
      Name: !Sub ${ALBTargetGroupName}
      Targets:
        - Id: !Ref LambdaFunctionArn

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  LambdaALBPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - ApplicationLoadBalancer
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaFunctionArn
      Principal: elasticloadbalancing.amazonaws.com
      SourceArn: !Sub "arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:targetgroup/${ALBTargetGroupName}/*"

Outputs:
  LoadBalancerDNS:
    Value: !GetAtt ApplicationLoadBalancer.DNSName
    Export:
      Name: !Sub ${EnvironmentName}-LoadBalancerDNS

  ALBSecurityGroupId:
    Value: !Ref ALBSecurityGroup
    Export:
      Name: !Sub ${EnvironmentName}-ALBSecurityGroupId